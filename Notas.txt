https://get-scatter.com/docs/setting-up-for-web-apps
https://get-scatter.com/docs/examples-interaction-flow
https://medium.com/coinmonks/how-to-use-eosjs-api-1-770b037b22ad


newapp
newitem
newcontainer

newasset
newinventory <- nuevo
issueunits
swap
transfer
transfunits
newuser4app <- sacarle la parte de mastery
newusercont
open
close
burn
droptables

-- Versions --
- Basic:
  - users can register apps, items and containers
  - publishers can create assets and issue units
- Mastery
newuserexp
newmastery



--------- Casos de uso Basico -----------
-- All --
- Register author 

-- APPs --
- Registro de una app (app_name, inventory, deposit)   // C&T
- Registro de un item Spec                   // Card, Envelop, Box
- Registro de container Spec                 // Album, Envelop, Box

-- Publisher --
- Registro de un Item Asset                  // openmic-w107-orrslaw-not-sorry: publicación de una carta específica
- Registro de un Container Asset             // openmic-100-weeks: publicación de un album concreto
- Issue copies of an Item Asset              // Crea N copias de una carta, que se sumarán al supply existente sin pasar de un máximo

-- User --
-- Swap units places (container / position)  // move cards in the inventory or album
-- use container                             // issues an instance of Container Asset
-- transfer units                            // give cards to someone else


Las aplicaciones deben ser registradas dando el account del contrato inteligente que cumple con un api para poder avisarle cada evento.
De esta manera el BG-Box se encarga con las reglas de Items y Containers Genéricos mientras que el el handler se encarga de reglas más específicas de la app.
Por ejemplo, se pueden exigir comisiones por cada evento, cumplir con mínimos o máximos, disparar otras acciones como cobrar impuesto, etc.


--------- Casos de uso Medio -----------
-- market 
  -- order units                               // creates an order to buy or sell any amount of owning copies of the same card
  -- cancel order                              // cancel previously created order



















------------------------------------------
BG-Box es capaz de recibir registros de publisher como apps.
Cada app tiene un inventario por defecto donde recibir las transferencias de items asociados a esa app (sólo si tiene espacio).
BG-Box es capaz de recibir registros de item_spec asociados a una app (cartas a cnt, torretas a turretdefence, unit a war_game ).
BG-Box es capaz de recibir registros de item_asset asociados a una item_spec
    ("100 viter.telos-card-telosvenezuela", "1000000 turretdefence.turrets", "10000 war_game.soldier","10000 war_game.tank").
Hay que poner en BG-Box un accounts que tenga un balance de tipo item_asset
Hay que crear en VapaeeTokens una tabla de perfiles
Se queda la implementación de accounts en C&T porque será una implementación concreta de item

Cada vez que alguien transfiera unidaades en C&T se ejecutará a BG-Box el mismo transfer para que mueva los items de inventarios


En BG-Box tenés:
- lista de todas las app registradas con prefix como id y self como scope.
- lista de todos los item_spec registrados con id autogenerado con segundo index un name. El scope es self.
- lista de todos los publishers que crearon algun item_asset para ese item_spec. El scope es el id del item_spec
  - en C&T te da una lista de los publisher que crearon alguna carta: muchas filas
  - en Turrent deffence te da una por cada torreta diferente y todas hechas por la misma app: pocas filas
- lista de todos los item_asset creados por algun publisher, donde el scope es el publisher prefix.
  - en C&T te da cosas como "100 viter.telos-card-telosvenezuela", "200 carlos.tremenda-carta-me-mande"
  - en Turrent deffence te da: "1000000 turretdefence.basic-turret", "1000000 turretdefence.medium-turret" , "1000000 turretdefence.bkt-turret" 

------------------------------------------                           




/usr/opt/eosio.cdt/1.3.2/bin/clang-7: /usr/lib/x86_64-linux-gnu/libstdc++.so.6: version `GLIBCXX_3.4.22' not found (required by /usr/opt/eosio.cdt/1.3.2/bin/clang-7)
issue: https://github.com/EOSIO/eosio.cdt/issues/284
solution: https://stackoverflow.com/a/46613765
sudo add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt-get update
sudo apt-get install gcc-4.9
sudo apt-get upgrade libstdc++6





